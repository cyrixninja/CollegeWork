;Write an assembly language code in GNUsim8085 to implement data transfer instruction. (HINT : MOV, MVI, LXI, LDAX, LDA, STA, STAX)

jmp start

;data


;code
start: nop

    	; LDA instruction - Load accumulator direct
    	LDA 0000H ; Load accumulator with the value at memory address 0001H

    	; LDAX instruction - Load accumulator indirect
    	LDAX B ; Load accumulator with the value at the address pointed by register pair BC (0001H)

    	; MOV instruction - Move data between registers
    	MOV A, B ; Move contents of register B to register A

    	; MVI instruction - Move immediate data into a register or memory location
    	MVI B, 0AH ; Move immediate value 0AH into register B

    	; LXI instruction - Load immediate data into register pair
    	LXI H, 0005H ; Load immediate address of data into register pair HL (0001H)

    	; LDA instruction - Load accumulator direct
    	LDA 0001H ; Load accumulator with the value at memory address 0001H

    	; STA instruction - Store accumulator direct
    	STA 0002H ; Store accumulator value at memory address 0002H

	MVI B, 9H ;
    	; STAX instruction - Store accumulator indirect
    	STAX B ; Store accumulator value at the address pointed by register pair DE


hlt